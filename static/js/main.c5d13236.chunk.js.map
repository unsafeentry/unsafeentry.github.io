{"version":3,"sources":["images/successpage-tickgreen-icon.svg","images/successpage-icon.svg","images/checkout-icon.svg","components/landing.component.jsx","components/check-in-card.component.jsx","App.js","redux/location.reducer.js","index.js"],"names":["module","exports","connect","state","location","password","dispatch","setLocation","type","payload","setPassword","history","useEffect","className","name","onChange","e","target","value","onClick","push","style","padding","borderRadius","display","checked","checkInLocation","src","GreenTick","Success","d","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","apm","displayHours","displayMinutes","href","CheckoutIcon","App","path","exact","component","Landing","CheckInCard","rootReducer","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5d13236.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/successpage-tickgreen-icon.6d2e3da3.svg\";","module.exports = __webpack_public_path__ + \"static/media/successpage-icon.77e26c2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkout-icon.a88d5a78.svg\";","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './Landing.css'\n\n\nconst Landing = ({ setLocation, location, history, setPassword, password }) => {\n\n    useEffect(() => {\n        setPassword('')\n    }, [])\n\n    return (\n        <div className=\"landing-container\">\n            <h3>Where you want to check into?</h3>\n            <input\n                type=\"text\"\n                name=\"location\"\n                className=\"location-field\"\n                onChange={e => setLocation(e.target.value)}\n                value={location}\n            />\n            <br />\n            <button\n                onClick={() => {\n                    if (password !== 'zzz') return;\n                    history.push('/checkin')\n                }}\n                style={{\n                    padding: '10px 20px',\n                    borderRadius: '5px',\n                    display: password === 'zzz' ? 'block' : 'none'\n                }}\n            >Check In!</button>\n            <br />\n            <label>\n                <input type=\"checkbox\" onChange={e => e.target.checked ? setPassword('zzz') : setPassword('')} />\n                &nbsp;\n                I understand the implications of using this app.\n            </label>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    location: state.location.location,\n    password: state.location.password\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setLocation: location => dispatch({ type: 'CHANGE_LOCATION', payload: location }),\n    setPassword: password => dispatch({ type: 'SET_PASSWORD', payload: password })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing)","import React from 'react'\nimport './CheckInCard.css'\nimport GreenTick from '../images/successpage-tickgreen-icon.svg'\nimport Success from '../images/successpage-icon.svg'\nimport CheckoutIcon from '../images/checkout-icon.svg'\nimport { connect } from 'react-redux'\n\n\nconst CheckInCard = ({ checkInLocation, password }) => {\n\n  if (password !== 'zzz') {\n    return (<div>Access denied</div>)\n  }\n\n  const getDate = () => {\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sept',\n      'Oct',\n      'Nov',\n      'Dec'\n    ]\n\n    const d = new Date();\n    const day = d.getDate();\n    const month = months[d.getMonth()];\n    const year = d.getFullYear();\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n\n    const apm = hours > 11 ? 'PM' : 'AM'\n\n    const displayHours = hours > 11 ? hours - 12 : hours\n\n    const displayMinutes = minutes < 10 ? '0' + minutes : minutes\n\n    const dateString = `${day} ${month} ${year}, ${displayHours}:${displayMinutes} ${apm}`\n    return dateString\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <img\n            src={GreenTick}\n            className=\"green-tick\"\n          />\n          <img\n            src={Success}\n            className=\"success-text\"\n          />\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"on-text\">You have successfully checked in on</div>\n          <h3 className=\"date-text\">{getDate()}</h3>\n          <div className=\"place-text\">{checkInLocation}</div>\n        </div>\n\n\n      </div>\n      <div className=\"footer\">\n        <span className=\"thanks-text\">Thank you for keeping Singapore safe!</span>\n        <span className=\"screenshot-text\">Screenshot this pass for record and donâ€™t forget to check out when you leave.</span>\n      </div>\n\n      <div>\n        <a href=\"#\" className=\"checkout-btn\">Checkout <img src={CheckoutIcon} className=\"checkout-icon\" /></a>\n      </div>\n    </div>\n\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  checkInLocation: state.location.location,\n  password: state.location.password\n})\n\nexport default connect(mapStateToProps)(CheckInCard)","import React from 'react'\nimport Landing from './components/landing.component'\nimport CheckInCard from './components/check-in-card.component'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Landing} />\n      <Route path=\"/checkin\" exact component={CheckInCard} />\n    </Router>\n  )\n}\n\nexport default App","import { combineReducers, createStore } from 'redux'\nimport storage from 'redux-persist/es/storage'\nimport { persistReducer, persistStore } from 'redux-persist'\n\n\nconst locationReducer = (state = {\n    location: '',\n    password: ''\n}, action) => {\n    switch (action.type) {\n        case 'CHANGE_LOCATION':\n            return {\n                ...state,\n                location: action.payload\n            }\n        case 'SET_PASSWORD':\n            return {\n                ...state,\n                password: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nconst rootReducer = combineReducers({\n    location: locationReducer\n})\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer)\n\nconst persistor = persistStore(store)\n\n\nexport {\n    store,\n    persistor\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport { store, persistor } from './redux/location.reducer'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}